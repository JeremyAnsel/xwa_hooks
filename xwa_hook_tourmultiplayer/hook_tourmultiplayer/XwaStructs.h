#pragma once

#include "XwaTypes.h"
#include "XwaEnums.h"

struct MobileObject;
struct Projectile;
struct Craft;
struct RotationMatrix3D;

#pragma pack(push, 1)

struct RotationMatrix3D
{
	__int16 Front_X;
	__int16 Front_Y;
	__int16 Front_Z;
	__int16 Right_X;
	__int16 Right_Y;
	__int16 Right_Z;
	__int16 Up_X;
	__int16 Up_Y;
	__int16 Up_Z;
};

struct CraftHardpoints
{
	__int16 weaponType;
	char groupType;
	char laserIndex;
	char energy;
	char warheadCount;
	__int16 field_6;
	char meshID;
	char hardpointID;
	char field_A;
	char field_B;
	__int16 field_C;
};


struct Object
{
	__int16 objectID;
	__int16 objectSpecies;
	char objectGenus;
	char FGIndex;
	char region;
	int x;
	int y;
	int z;
	__int16 yaw;
	__int16 pitch;
	__int16 roll;
	__int16 rotation;
	__int16 field_1B;
	__int16 field_1D;
	int humanPlayerIndex;
	MobileObject *MobileObjectPtr;
};

static_assert(sizeof(Object) == 39, "size of Object must be 39");

struct MobileObject
{
	BYTE objectFamily;
	char spriteDrawScale;
	_DWORD spriteScale;
	_DWORD lastUpdateTime;
	_DWORD PosXDelta;
	_DWORD PosYDelta;
	int PosZDelta;
	char collisionChecksActive;
	int collisionCheckTimers[16];
	__int16 collisionCheckObjectIndex[16];
	int collisionCheckMasterCountdown;
	__int16 currentSpeedFraction;
	__int16 field_7D;
	char field_7F;
	char field_80;
	__int16 field_81;
	__int16 _impactSpinRate_;
	__int16 currentSpeed;
	__int16 speedRelease;
	int collisionDamage;
	__int16 lifespan;
	char field_8F;
	char field_90;
	__int16 timeAlive;
	__int16 motherObjectIndex;
	__int16 motherObjectSpecies;
	char IFF;
	char Team;
	char markingColor;
	__int16 ejectionObjects;
	int field_9C;
	char inCollision;
	__int16 field_A1;
	__int16 field_A3;
	__int16 field_A5;
	__int16 field_A7;
	__int16 field_A9;
	__int16 field_AB;
	char field_AD;
	char field_AE;
	char field_AF;
	char field_B0;
	char field_B1;
	char field_B2;
	char field_B3;
	char field_B4;
	char field_B5;
	char field_B6;
	char field_B7;
	char field_B8;
	char field_B9;
	char field_BA;
	char field_BB;
	char field_BC;
	char field_BD;
	char field_BE;
	char forwardVectorNeedsRecalculation;
	__int16 forwardX;
	__int16 forwardY;
	__int16 forwardZ;
	char transformNeedsRecalculation;
	RotationMatrix3D transformMatrix;
	Projectile *ProjectilePTR;
	Craft *CraftPtr;
	int unknownPTR;
};

static_assert(sizeof(MobileObject) == 229, "size of MobileObject must be 229");

struct Craft
{
	int craftNumberInFG;
	__int16 craftSpecies;
	int leaderCraftIndex;
	char GettingNewBaseOffset;
	char craftState;
	char removedFromPlay;
	__int16 aiSkill;
	__int16 field_F;
	char unknown2[4];
	char field_15;
	char field_16;
	char field_17;
	char field_18;
	char isUnderBeamEffect[5];
	BYTE field_1E;
	BYTE field_1F;
	char unknown4;
	char field_21;
	char field_22;
	char field_23;
	char field_24;
	char field_25;
	char field_26;
	char sfoilsState;
	char CraftInstanceNewBaseOffset;
	char meshStates[20];
	char waypointLoopsCompleted;
	char field_3E;
	char field_3F;
	char field_40;
	char field_41;
	char field_42;
	char field_43;
	char field_44;
	char field_45;
	char field_46;
	char field_47;
	char field_48;
	char field_49;
	char field_4A;
	char field_4B;
	char field_4C;
	char field_4D;
	char field_4E;
	char field_4F;
	char field_50;
	char field_51;
	char currentFlightPlan;
	char startingFlightPlan;
	char currentWaypointIndex;
	char savedAwaitingOrder;
	int aiCycleTime;
	int aiCycleTimer;
	__int16 _updating_;
	__int16 aiTargetIndex;
	__int16 aiTargetObjectID;
	__int16 field_64;
	char field_66;
	int aiWaypointPositionX;
	int aiWaypointPositionY;
	int aiWaypointPositionZ;
	int angleDistance;
	__int16 field_77;
	BYTE field_79;
	char field_7A;
	__int16 playerAttackOrderTargetIndex;
	char field_7D;
	__int16 aiDesiredPitch;
	__int16 aiDesiredRoll;
	__int16 aiDesiredYaw;
	char currentManr;
	char specialTimerOrState;
	int aiTimerToAttack;
	int aiTimerToFlyWP;
	__int16 carryingObjectIndex;
	char field_90;
	char field_91;
	__int16 field_92;
	__int16 field_94;
	__int16 field_96;
	__int16 field_98;
	__int16 field_9A;
	__int16 threatenedByIndex;
	char field_9E;
	char field_9F;
	__int16 field_A0;
	__int16 field_A2;
	BYTE field_A4;
	char unknownA5[2];
	__int16 unknownA7;
	__int16 unknownA9;
	BYTE field_AB;
	char unknownAC[2];
	char field_AE;
	char field_AF;
	BYTE field_B0;
	int field_B1;
	int field_B5;
	int field_B9;
	__int16 field_BD;
	__int16 field_BF;
	__int16 field_C1;
	char field_C3;
	__int16 topSpeedMPH;
	__int16 speedPercentage;
	char rotationRelatedUnk1;
	char rotationRelatedUnk2;
	__int16 pitchRate;
	__int16 pitchPercentage;
	char pitchState;
	char rotationRelatedUnk3;
	__int16 pitchMaxPercentage;
	__int16 rollRate;
	__int16 rollPercentage;
	char rollState;
	__int16 rollMaxPercentage;
	__int16 yawRate;
	__int16 yawPercentage;
	char yawState;
	__int16 yawMaxPercentage;
	char field_E0;
	char formationMultiplierIndex;
	char numInFG;
	char field_E3;
	int driftXPos;
	int driftYPos;
	int driftZPos;
	__int16 engineThrottleInput;
	__int16 engineGlowOutput;
	__int16 missionSpeed;
	__int16 engineSLAMInput;
	int hullDamage;
	__int16 criticalDamageThreshold;
	char field_FE;
	char field_FF;
	int hullHitPoints;
	__int16 systemDamage;
	char field_106;
	char field_107;
	char field_108;
	char field_109;
	char field_10A;
	int totalDmgReceived;
	int totalDmgToPlayer;
	int totalDmgFromCollisions;
	int totalDmgFromTurrets;
	int totalDmgFromMines;
	char field_11F;
	char field_120;
	char field_121;
	char field_122;
	char field_123;
	char field_124;
	char field_125;
	char field_126;
	char field_127;
	char field_128;
	char field_129;
	char field_12A;
	char field_12B;
	char field_12C;
	char field_12D;
	char field_12E;
	char field_12F;
	char field_130;
	char field_131;
	char field_132;
	char field_133;
	char field_134;
	char field_135;
	char field_136;
	char field_137;
	char field_138;
	char field_139;
	char field_13A;
	char field_13B;
	char field_13C;
	char field_13D;
	char field_13E;
	char field_13F;
	char field_140;
	char field_141;
	char field_142;
	char field_143;
	char field_144;
	char field_145;
	char field_146;
	char field_147;
	char field_148;
	char field_149;
	char field_14A;
	char field_14B;
	char field_14C;
	char field_14D;
	char field_14E;
	char field_14F;
	char field_150;
	char field_151;
	char field_152;
	char field_153;
	char field_154;
	char field_155;
	char field_156;
	char field_157;
	char field_158;
	char field_159;
	char field_15A;
	char field_15B;
	char field_15C;
	char field_15D;
	char field_15E;
	char field_15F;
	char field_160;
	char field_161;
	char field_162;
	char field_163;
	char field_164;
	char field_165;
	char field_166;
	char field_167;
	char field_168;
	char field_169;
	char field_16A;
	char field_16B;
	char field_16C;
	char field_16D;
	char field_16E;
	char field_16F;
	char field_170;
	char field_171;
	char field_172;
	char field_173;
	char field_174;
	char field_175;
	char field_176;
	char field_177;
	char field_178;
	char field_179;
	char field_17A;
	char field_17B;
	char field_17C;
	char field_17D;
	char field_17E;
	__int16 initialCockpitInstruments;
	__int16 cockpitInstrumentStatus;
	__int16 initialSubsystems;
	__int16 subsystemStatus;
	char field_187;
	char field_188;
	char field_189;
	char field_18A;
	char field_18B;
	char field_18C;
	char field_18D;
	char field_18E;
	char field_18F;
	char field_190;
	char field_191;
	char field_192;
	char field_193;
	char field_194;
	char field_195;
	char inspectionState;
	char field_197;
	char field_198;
	char field_199;
	char field_19A;
	char field_19B;
	char field_19C;
	char field_19D;
	char field_19E;
	char field_19F;
	char field_1A0;
	char field_1A1;
	int frontShieldHitpoints;
	int rearShieldHitpoints;
	char elsShields;
	char shieldDirection;
	char numberOfLaserSets;
	char elsLasers;
	char numberOfLasers;
	char convergenceMode;
	__int16 laserType[3];
	char laserLinkStatus[3];
	char field_1B9;
	char field_1BA;
	char field_1BB;
	char laserNextHardpoint[3];
	__int16 laserCooldown[3];
	int laserLastFireAttempt[3];
	char numWarheadLauncherGroups;
	__int16 warheadType[2];
	char warheadNextHardpoint[2];
	__int16 warheadCooldown[2];
	__int16 lockTime;
	char beamType;
	char elsBeam;
	__int16 beamEnergy;
	char beamActive;
	__int16 beamActive2;
	char field_1E5;
	char field_1E6;
	char countermeasureType;
	char countermeasureAmount;
	__int16 chaffLifespan;
	__int16 flareLifespan;
	__int16 primaryLasersFired;
	__int16 primaryLasersHit;
	__int16 secondaryLasersFired;
	__int16 secondaryLasersHit;
	char warheadsFired;
	char warheadsHit;
	char field_1F7;
	char field_1F8;
	char field_1F9;
	char field_1FA;
	char field_1FB;
	char field_1FC;
	char field_1FD;
	char field_1FE;
	char field_1FF;
	BYTE field_200;
	int field_201;
	char field_205;
	char field_206;
	char field_207;
	char field_208;
	char field_209;
	char field_20A;
	char field_20B;
	char field_20C;
	char field_20D;
	char field_20E;
	char field_20F;
	char field_210;
	int field_211;
	int field_215;
	BYTE field_219;
	BYTE field_21A;
	BYTE field_21B;
	BYTE field_21C;
	BYTE field_21D;
	BYTE field_21E[1];
	BYTE field_21F;
	char field_220[4];
	BYTE field_224[1];
	BYTE field_225;
	__int16 field_226[2];
	int field_22A[2];
	BYTE field_232;
	BYTE field_233;
	BYTE field_234;
	BYTE field_235;
	BYTE field_236;
	__int16 field_237[2];
	__int16 field_23B;
	BYTE field_23D;
	BYTE field_23E;
	__int16 field_23F;
	BYTE field_241;
	__int16 field_242;
	__int16 field_244;
	BYTE field_246;
	BYTE field_247;
	__int16 field_248;
	__int16 field_24A;
	__int16 field_24C;
	__int16 field_24E;
	__int16 field_250;
	__int16 field_252;
	BYTE field_254;
	BYTE field_255;
	__int16 field_256;
	char field_258;
	char field_259;
	char field_25A;
	char field_25B;
	char field_25C;
	char field_25D;
	char field_25E;
	char field_25F;
	char componentRotation[50];
	char field_292;
	char field_293;
	char field_294;
	char field_295;
	char field_296;
	char field_297;
	char field_298;
	char field_299;
	char field_29A;
	char field_29B;
	char field_29C;
	char field_29D;
	char field_29E;
	char field_29F;
	char field_2A0;
	__int16 field_2A1;
	char field_2A3;
	char field_2A4;
	char field_2A5;
	char field_2A6;
	char field_2A7;
	char field_2A8;
	char field_2A9;
	char field_2AA;
	char field_2AB;
	char field_2AC;
	char field_2AD;
	char field_2AE;
	char field_2AF;
	char field_2B0;
	char field_2B1;
	char field_2B2;
	char field_2B3;
	char field_2B4;
	char field_2B5;
	char field_2B6;
	char field_2B7;
	char field_2B8;
	char field_2B9;
	char field_2BA;
	char field_2BB;
	char field_2BC;
	char field_2BD;
	char field_2BE;
	char field_2BF;
	char field_2C0;
	char field_2C1;
	int field_2C2;
	char field_2C6;
	char playerIndex;
	char field_2C8;
	char field_2C9;
	char field_2CA;
	char field_2CB;
	char field_2CC;
	char field_2CD;
	char field_2CE;
	char field_2CF;
	char field_2D0;
	char field_2D1;
	char field_2D2;
	char field_2D3;
	char field_2D4;
	char field_2D5;
	char field_2D6;
	char field_2D7;
	__int16 field_2D8;
	char field_2DA;
	char field_2DB;
	char field_2DC;
	char field_2DD;
	char field_2DE;
	CraftHardpoints hardpoint[16];
	int unknownPTR2;
	char field_3C3;
	char field_3C4;
	char field_3C5;
	char field_3C6;
	char field_3C7;
	char field_3C8;
	char field_3C9;
	char field_3CA;
	char field_3CB;
	char field_3CC;
	char field_3CD;
	char field_3CE;
	char field_3CF;
	char field_3D0;
	char field_3D1;
	char field_3D2;
	char field_3D3;
	char field_3D4;
	char field_3D5;
	char field_3D6;
	char field_3D7;
	char field_3D8;
	char field_3D9;
	char field_3DA;
	char field_3DB;
	char field_3DC;
	char field_3DD;
	char field_3DE;
	char field_3DF;
	char field_3E0;
	char field_3E1;
	char field_3E2;
	char field_3E3;
	char field_3E4;
	char field_3E5;
	char field_3E6;
	char field_3E7;
	char field_3E8;
	char field_3E9;
	char field_3EA;
	char field_3EB;
	char field_3EC;
	char field_3ED;
	char field_3EE;
	char field_3EF;
	char field_3F0;
	char field_3F1;
	char field_3F2;
	char field_3F3;
	char field_3F4;
	int unknownPTR;
};

static_assert(sizeof(Craft) == 1017, "size of Craft must be 1017");

struct Player
{
	int objectIndex;
	int jumpNextCraftID;
	__int16 playerRank;
	__int16 IFF;
	__int16 team;
	__int16 playerFG;
	char region;
	char participationState;
	char isEjecting;
	char autopilotAction;
	char field_14;
	char mapState;
	char autopilot;
	char hyperspacePhase;
	int _hyperspaceRelated_;
	char field_1C;
	char field_1D;
	char field_1E;
	int timeInHyperspace;
	char allowTargetBox;
	char warheadLockState;
	__int16 currentTargetIndex;
	char targetTimeTargetedSeconds;
	char targetTimeTargetedMinutes;
	__int16 lastTargetIndex;
	__int16 craftMemory1;
	__int16 craftMemory2;
	__int16 craftMemory3;
	__int16 craftMemory4;
	char primarySecondaryArmed;
	char warheadArmed;
	__int16 componentTargetIndex;
	__int16 field_37;
	__int16 engineWashCraftIndex;
	__int16 engineWashAmount;
	__int16 throttlePreset1;
	__int16 throttlePreset2;
	char elsPreset1Lasers;
	char elsPreset2Lasers;
	char elsPreset1Shields;
	char elsPreset2Shields;
	char elsPreset1Beam;
	char elsPreset2Beam;
	__int16 engineThrottleInput;
	char elsLasers;
	char elsShields;
	char elsBeam;
	char shieldDirection;
	char primaryLaserLinkStatus;
	int secondaryLinkStatus;
	char criticalMessageType;
	__int16 criticalMessageTargetObjIndex;
	char field_55;
	char field_56;
	char rollHeld;
	char field_58;
	__int16 yawDrift;
	__int16 pitchDrift;
	__int16 rollDrift;
	char joystickTriggerFlags;
	char field_60;
	__int16 rollDelayTimer;
	char field_63;
	char hudActive1;
	char hudActive2;
	char simpleHUD;
	char bottomLeftPanel;
	char bottomRightPanel;
	char activeWeapon;
	char field_6A;
	char consoleActivated;
	char panelSelected;
	char panelSelected2;
	char field_6E;
	char bottomLeftPanelScreenState;
	char field_70;
	char field_71;
	char bottomRightPanelScreenState;
	char field_73;
	char flightCommandSelected;
	char flightCommandSelection;
	char field_76;
	char field_77;
	char flightCommandNumWingmenSelectable;
	char flightCommandWingmanSelected;
	char field_7A;
	char flightCommandWingmenSelectable[6];
	char field_81;
	char field_82;
	char field_83;
	char field_84;
	char field_85;
	char field_86;
	char field_87;
	char field_88;
	char field_89;
	char field_8A;
	char field_8B;
	char field_8C;
	char field_8D;
	char field_8E;
	char field_8F;
	char field_90;
	char field_91;
	char field_92;
	char field_93;
	char field_94;
	char field_95;
	char field_96;
	char field_97;
	char field_98;
	int field_99;
	int field_9D;
	int field_A1;
	int field_A5;
	int field_A9;
	int field_AD;
	int field_B1;
	int field_B5;
	int field_B9;
	int field_BD;
	int field_C1;
	int field_C5;
	int field_C9;
	int field_CD;
	int field_D1;
	int field_D5;
	int field_D9;
	int field_DD;
	int field_E1;
	int field_E5;
	int field_E9;
	int field_ED;
	int field_F1;
	int field_F5;
	int field_F9;
	int field_FD;
	int field_101;
	int field_105;
	int field_109;
	int field_10D;
	int field_111;
	int field_115;
	int field_119;
	int field_11D;
	int field_121;
	int field_125;
	int field_129;
	int field_12D;
	int field_131;
	int field_135;
	int field_139;
	int field_13D;
	int field_141;
	int field_145;
	int field_149;
	int field_14D;
	int field_151;
	int field_155;
	int field_159;
	int field_15D;
	int field_161;
	char field_165;
	char field_166;
	char field_167;
	char field_168;
	char field_169;
	char field_16A;
	char field_16B;
	char field_16C;
	char field_16D;
	char field_16E;
	char field_16F;
	char field_170;
	char field_171;
	char field_172;
	char field_173;
	char field_174;
	char field_175;
	char field_176;
	char field_177;
	char field_178;
	char field_179;
	char field_17A;
	char field_17B;
	char field_17C;
	char field_17D;
	char field_17E;
	char field_17F;
	char field_180;
	char field_181;
	char field_182;
	char field_183;
	char field_184;
	char field_185;
	char field_186;
	char field_187;
	char field_188;
	char field_189;
	char field_18A;
	char field_18B;
	char field_18C;
	char field_18D;
	char field_18E;
	char field_18F;
	char field_190;
	char field_191;
	char field_192;
	char field_193;
	char field_194;
	char field_195;
	char field_196;
	char field_197;
	char field_198;
	char field_199;
	char field_19A;
	char field_19B;
	char field_19C;
	char field_19D;
	char field_19E;
	char field_19F;
	char field_1A0;
	char field_1A1;
	char field_1A2;
	char field_1A3;
	char field_1A4;
	char field_1A5;
	char field_1A6;
	char field_1A7;
	char field_1A8;
	char field_1A9;
	char field_1AA;
	char field_1AB;
	char field_1AC;
	char field_1AD;
	char field_1AE;
	char field_1AF;
	char field_1B0;
	char field_1B1;
	char field_1B2;
	char field_1B3;
	char field_1B4;
	char field_1B5;
	char field_1B6;
	char field_1B7;
	char field_1B8;
	char field_1B9;
	char field_1BA;
	char field_1BB;
	char field_1BC;
	char field_1BD;
	char field_1BE;
	char field_1BF;
	char field_1C0;
	char field_1C1;
	char field_1C2;
	char field_1C3;
	char field_1C4;
	char field_1C5;
	char field_1C6;
	char field_1C7;
	char field_1C8;
	char field_1C9;
	char field_1CA;
	char field_1CB;
	char field_1CC;
	char field_1CD;
	char field_1CE;
	char field_1CF;
	char field_1D0;
	char field_1D1;
	char field_1D2;
	char field_1D3;
	char field_1D4;
	char field_1D5;
	char field_1D6;
	char field_1D7;
	char field_1D8;
	char field_1D9;
	char field_1DA;
	char field_1DB;
	char field_1DC;
	char field_1DD;
	char field_1DE;
	char field_1DF;
	char field_1E0;
	char field_1E1;
	char field_1E2;
	char field_1E3;
	char field_1E4;
	char field_1E5;
	char field_1E6;
	char field_1E7;
	char field_1E8;
	char field_1E9;
	__int16 consoleCharacterCount;
	int aiObjectIndex;
	char field_1F0;
	char field_1F1;
	char field_1F2;
	char field_1F3;
	char field_1F4;
	char field_1F5;
	char field_1F6;
	char field_1F7;
	char field_1F8;
	char cockpitDisplayed;
	char cockpitDisplayed2;
	char field_1FB;
	char field_1FC;
	__int16 cockpitCameraYaw;
	__int16 cockpitCameraPitch;
	int _Pitch_;
	int _Yaw_;
	int _Roll_;
	char field_20D[12];
	__int16 gunnerTurretActive;
	__int16 numberOfGunnerHardpoints;
	char currentGunnerHardpointActive;
	char field_21E;
	char field_21F;
	char field_220;
	char field_221;
	char field_222;
	char field_223;
	char field_224;
	char field_225;
	char field_226;
	char field_227;
	char field_228;
	char field_229;
	char field_22A;
	char field_22B;
	char field_22C;
	char field_22D;
	char field_22E;
	char field_22F;
	int score;
	int promoPoints;
	int worsePromoPoints;
	int field_23C;
	char field_240;
	char field_241;
	char field_242;
	char field_243;
	char field_244;
	char field_245;
	char field_246;
	char field_247;
	char field_248;
	char field_249;
	char field_24A;
	char field_24B;
	__int16 energyWeapon1Fired;
	__int16 energyWeapon1Hits;
	__int16 energyWeapon2Fired;
	__int16 energyWeapon2Hits;
	__int16 WarheadsFired;
	__int16 WarheadHits;
	__int16 numOfCraftInspected;
	__int16 numOfSpecialCraftInspected;
	__int16 killsOnFG[192];
	char field_3DC[982];
	char field_7B2;
	char field_7B3;
	char field_7B4;
	char field_7B5;
	__int16 friendliesKilled;
	__int16 totalLosses;
	__int16 totalLossesByCollision;
	__int16 totalLossesByStarship;
	__int16 totalLossesByMine;
	char field_7C0[510];
	char field_9BE;
	char field_9BF;
	char field_9C0;
	char field_9C1;
	char field_9C2;
	char field_9C3;
	char field_9C4;
	char field_9C5;
	char field_9C6;
	char field_9C7;
	char field_9C8;
	char field_9C9;
	char field_9CA;
	char field_9CB;
	char field_9CC;
	char field_9CD;
	char field_9CE;
	char field_9CF;
	char field_9D0;
	char field_9D1;
	char field_9D2;
	char field_9D3;
	char field_9D4;
	char field_9D5;
	char field_9D6;
	char field_9D7;
	char field_9D8;
	char field_9D9;
	char field_9DA;
	char field_9DB;
	char field_9DC;
	char field_9DD;
	char field_9DE;
	char field_9DF;
	char field_9E0;
	char field_9E1;
	char field_9E2;
	char field_9E3;
	char field_9E4;
	char field_9E5;
	char field_9E6;
	char field_9E7;
	char field_9E8;
	char field_9E9;
	char field_9EA;
	char field_9EB;
	char field_9EC;
	char field_9ED;
	char field_9EE;
	char field_9EF;
	char field_9F0;
	char field_9F1;
	char field_9F2;
	char field_9F3;
	char field_9F4;
	char field_9F5;
	char field_9F6;
	char field_9F7;
	char field_9F8;
	char field_9F9;
	char field_9FA;
	char field_9FB;
	char field_9FC;
	char field_9FD;
	char field_9FE;
	char field_9FF;
	char field_A00;
	char field_A01;
	char field_A02;
	char field_A03;
	char field_A04;
	char field_A05;
	char field_A06;
	char field_A07;
	char field_A08;
	char field_A09;
	char field_A0A;
	char field_A0B;
	char field_A0C;
	char field_A0D;
	char field_A0E;
	char field_A0F;
	char field_A10;
	char field_A11;
	char field_A12;
	char field_A13;
	char field_A14;
	char field_A15;
	char field_A16;
	char field_A17;
	char field_A18;
	char field_A19;
	char field_A1A;
	char field_A1B;
	char field_A1C;
	char field_A1D;
	char field_A1E;
	char field_A1F;
	char field_A20;
	char field_A21;
	char field_A22;
	char field_A23;
	char field_A24;
	char field_A25;
	char field_A26;
	char field_A27;
	char field_A28;
	char field_A29;
	char field_A2A;
	char field_A2B;
	char field_A2C;
	char field_A2D;
	char field_A2E;
	char field_A2F;
	char field_A30;
	char field_A31;
	char field_A32;
	char field_A33;
	char field_A34;
	char field_A35;
	char field_A36;
	char field_A37;
	char field_A38;
	char field_A39;
	char field_A3A;
	char field_A3B;
	char field_A3C;
	char field_A3D;
	char field_A3E;
	char field_A3F;
	char field_A40;
	char field_A41;
	char field_A42;
	char field_A43;
	char field_A44;
	char field_A45;
	char field_A46;
	char field_A47;
	char field_A48;
	char field_A49;
	char field_A4A;
	char field_A4B;
	char field_A4C;
	char field_A4D;
	char field_A4E;
	char field_A4F;
	char field_A50;
	char field_A51;
	char field_A52;
	char field_A53;
	char field_A54;
	char field_A55;
	char field_A56;
	char field_A57;
	char field_A58;
	char field_A59;
	char field_A5A;
	char field_A5B;
	char field_A5C;
	char field_A5D;
	char field_A5E;
	char field_A5F;
	char field_A60;
	char field_A61;
	char field_A62;
	char field_A63;
	char field_A64;
	char field_A65;
	char field_A66;
	char field_A67;
	char field_A68;
	char field_A69;
	char field_A6A;
	char field_A6B;
	char field_A6C;
	char field_A6D;
	char field_A6E;
	char field_A6F;
	char field_A70;
	char field_A71;
	char field_A72;
	char field_A73;
	char field_A74;
	char field_A75;
	char field_A76;
	char field_A77;
	char field_A78;
	char field_A79;
	char field_A7A;
	char field_A7B;
	char field_A7C;
	char field_A7D;
	char field_A7E;
	char field_A7F;
	char field_A80;
	char field_A81;
	char field_A82;
	char field_A83;
	char field_A84;
	char field_A85;
	char field_A86;
	char field_A87;
	char field_A88;
	char field_A89;
	char field_A8A;
	char field_A8B;
	char field_A8C;
	char field_A8D;
	char field_A8E;
	char field_A8F;
	char field_A90;
	char field_A91;
	char field_A92;
	char field_A93;
	char field_A94;
	char field_A95;
	char field_A96;
	char field_A97;
	char field_A98;
	char field_A99;
	char field_A9A;
	char field_A9B;
	char field_A9C;
	char field_A9D;
	char field_A9E;
	char field_A9F;
	char field_AA0;
	char field_AA1;
	char field_AA2;
	char field_AA3;
	char field_AA4;
	char field_AA5;
	char field_AA6;
	char field_AA7;
	char field_AA8;
	char field_AA9;
	char field_AAA;
	char field_AAB;
	char field_AAC;
	char field_AAD;
	char field_AAE;
	char field_AAF;
	char field_AB0;
	char field_AB1;
	char field_AB2;
	char field_AB3;
	char field_AB4;
	char field_AB5;
	char field_AB6;
	char field_AB7;
	char field_AB8;
	char field_AB9;
	char field_ABA;
	char field_ABB;
	char field_ABC;
	char field_ABD;
	char field_ABE;
	char field_ABF;
	char field_AC0;
	char field_AC1;
	char field_AC2;
	char field_AC3;
	char field_AC4;
	char field_AC5;
	char field_AC6;
	char field_AC7;
	char field_AC8;
	char field_AC9;
	char field_ACA;
	char field_ACB;
	char field_ACC;
	char field_ACD;
	char field_ACE;
	char field_ACF;
	char field_AD0;
	char field_AD1;
	char field_AD2;
	char field_AD3;
	char field_AD4;
	char field_AD5;
	char field_AD6;
	char field_AD7;
	char field_AD8;
	char field_AD9;
	char field_ADA;
	char field_ADB;
	char field_ADC;
	char field_ADD;
	char field_ADE;
	char field_ADF;
	char field_AE0;
	char field_AE1;
	char field_AE2;
	char field_AE3;
	char field_AE4;
	char field_AE5;
	__int16 field_AE6;
	char field_AE8;
	char field_AE9;
	char field_AEA;
	char field_AEB;
	char field_AEC;
	char field_AED;
	char field_AEE;
	char field_AEF;
	char field_AF0;
	char field_AF1;
	char field_AF2;
	char field_AF3;
	char field_AF4;
	char field_AF5;
	char field_AF6;
	char field_AF7;
	char field_AF8;
	char field_AF9;
	char field_AFA;
	char field_AFB;
	char field_AFC;
	char field_AFD;
	char field_AFE;
	char field_AFF;
	char field_B00;
	char field_B01;
	char field_B02;
	char field_B03;
	char field_B04;
	char field_B05;
	char field_B06;
	char field_B07;
	char field_B08;
	char field_B09;
	char field_B0A;
	char field_B0B;
	char field_B0C;
	char field_B0D;
	char field_B0E;
	char field_B0F;
	char field_B10;
	char field_B11;
	char field_B12;
	char field_B13;
	char chatString[49];
	char chatStringTerminator;
	char chatStringCharCount;
	char multiChatMode;
	int cameraX;
	int cameraY;
	int cameraZ;
	int cameraFG;
	int RelatedToMap;
	__int16 pitch;
	__int16 yaw;
	__int16 roll;
	__int16 cameraRoll;
	__int16 cameraPitch;
	__int16 cameraYaw;
	char cockpitXReference;
	char field_B69;
	char field_B6A;
	char field_B6B;
	char cockpitYReference;
	char field_B6D;
	__int16 field_B6E;
	char cockpitZReference;
	char field_B71;
	char field_B72;
	char field_B73;
	char cockpitPitchReference;
	char field_B75;
	char cockpitYawReference;
	char field_B77;
	char cockpitRollReference;
	char field_B79;
	char field_B7A;
	char field_B7B;
	char viewMode1;
	char viewMode2;
	char field_B7E[7];
	__int16 mapMode;
	__int16 _RelatedToCamera_;
	__int16 externalCamera;
	int externalCameraDistance;
	__int16 field_B8F;
	char field_B91;
	char field_B92;
	char field_B93;
	char field_B94;
	__int16 screenResolutionSetting;
	int rosterID;
	int missionTime;
	int posX;
	int posY;
	int posZ;
	__int16 roll2;
	__int16 pitch2;
	__int16 yaw2;
	int lifespan;
	__int16 currentSpeed;
	__int16 speedRelease;
	__int16 currentSpeedFraction;
	__int16 objectID;
	char isEjectingDelta;
	int criticalMessageTimer;
	__int16 field_BC2;
	__int16 field_BC4;
	__int16 field_BC6;
	__int16 field_BC8;
	char timeInMissionMilliseconds2;
	char timeInMissionSeconds2;
	char timeInMissionMinutes;
	char timeInMissionHours;
	char coPilotControlled;
};

static_assert(sizeof(Player) == 3023, "size of Player must be 3023");

struct MissionTrigger
{
	BYTE Condition;
	BYTE VariableType;
	BYTE Variable;
	BYTE Amount;
};


struct MissionOrder
{
	BYTE Order;
	BYTE Throttle;
	BYTE Variable1;
	BYTE Variable2;
	BYTE Unknown6;
	BYTE Unknown7;
	BYTE Target3Type;
	BYTE Target4Type;
	BYTE Target3;
	BYTE Target4;
	bool Target3OrTarget4;
	BYTE Unknown8;
	BYTE Target1Type;
	BYTE Target1;
	BYTE Target2Type;
	BYTE Target2;
	bool Target1OrTarget2;
	BYTE Unknown9;
	BYTE Speed;
	char Designation[16];
	BYTE unknown_0x23[47];
	char field_52;
	char field_53;
	char field_54;
	char field_55;
	char field_56;
	char field_57;
	char field_58;
	char field_59;
	char field_5A;
	char field_5B;
	char field_5C;
	char field_5D;
	char field_5E;
	char field_5F;
	char field_60;
	char field_61;
	char field_62;
	char field_63;
	char field_64;
	char field_65;
	char field_66;
	char field_67;
	char field_68;
	char field_69;
	char field_6A;
	char field_6B;
	char field_6C;
	char field_6D;
	char field_6E;
	char field_6F;
	char field_70;
	char field_71;
	char field_72;
	char field_73;
	char field_74;
	char field_75;
	char field_76;
	char field_77;
	char field_78;
	char field_79;
	char field_7A;
	char field_7B;
	char field_7C;
	char field_7D;
	char field_7E;
	char field_7F;
	char field_80;
	char field_81;
	char field_82;
	char field_83;
	char field_84;
	char field_85;
	char field_86;
	char field_87;
	char field_88;
	char field_89;
	char field_8A;
	char field_8B;
	char field_8C;
	char field_8D;
	char field_8E;
	char field_8F;
	char field_90;
	char field_91;
	char field_92;
	char field_93;
};

struct MissionGoalFG
{
	BYTE Argument;
	BYTE Condition;
	BYTE Amount;
	BYTE Points;
	bool Enabled;
	BYTE Team;
	bool Unknown10;
	bool Unknown11;
	bool Unknown12;
	BYTE unknown_0x9[2];
	BYTE Unknown13;
	bool Unknown14;
	BYTE Unknown15;
	BYTE TimeLimit;
	char unknown_0xF[65];
};


struct FlightGroupEntry
{
	char Name[20];
	char roleTeam[2];
	char roleType[2];
	char field_18;
	char field_19;
	char field_1A;
	char field_1B;
	char field_1C;
	char field_1D;
	char field_1E;
	char field_1F;
	char field_20;
	__int16 field_21;
	char field_23;
	int field_24;
	char Cargo[20];
	char SpecialCargo[20];
	char Roles[20];
	char field_64;
	char field_65;
	char field_66;
	char field_67;
	char field_68;
	char specialShipInFG;
	char field_6A;
	char objectType;
	char numberOfCraft;
	char status1;
	char warheadType;
	char beam;
	char IFF;
	char Team;
	char aiRank;
	char markingColor;
	char radio;
	char field_75;
	char formation;
	char formationSpacing;
	char globalGroup;
	char leaderSpacing;
	char numberOfWaves;
	char field_7B;
	char field_7C;
	char playerNumber;
	char arriveOnlyIfHuman;
	char playerCraft;
	__int16 startingPitch;
	__int16 startingYaw;
	__int16 startingRoll;
	char arrivalDifficulty;
	MissionTrigger arrival1;
	MissionTrigger arrival2;
	__int16 field_8F;
	char arrival1OrArrival2;
	char arrival3;
	char arrival4;
	__int16 field_94;
	char arrival3OrArrival4;
	char arrival12OrArrival34;
	char field_98;
	char arrivalDelayMinutes;
	char arrivalDelaySeconds;
	MissionTrigger Departure1;
	MissionTrigger Departure2;
	__int16 field_A3;
	char Departure1OrDeparture2;
	char DepartureDelayMinutes;
	char DepartureDelaySeconds;
	char AbortMissionTrigger;
	char field_A9;
	char field_AA;
	char field_AB;
	char field_AC;
	char field_AD;
	char ArrivalMothership;
	char ArriveViaMothership;
	char DepartureMothership;
	char DepartViaMothership;
	char AlternateArrivalMothership;
	char AlternateArriveViaMothership;
	char AlternateDepartureMothership;
	char AlternatDepartViaMothership;
	char field_B6;
	char field_B7;
	char field_B8;
	char field_B9;
	char field_BA;
	char field_BB;
	char field_BC;
	char field_BD;
	char field_BE;
	char field_BF;
	char field_C0;
	char field_C1;
	char field_C2;
	char field_C3;
	char field_C4;
	char field_C5;
	char field_C6;
	char field_C7;
	char field_C8;
	char field_C9;
	MissionOrder MissionOrder[4];
	_BYTE gap31A[624];
	char field_58A;
	_BYTE gap58B[92];
	char field_5E7;
	_BYTE gap5E8[3];
	char field_5EB;
	_BYTE gap5EC[2];
	char field_5EE;
	_BYTE gap5EF[551];
	char field_816;
	char field_817;
	char field_818;
	char field_819;
	char field_81A;
	char field_81B;
	char field_81C;
	char field_81D;
	char field_81E;
	char field_81F;
	char field_820;
	char field_821;
	char field_822;
	char field_823;
	char field_824;
	char field_825;
	char field_826;
	char field_827;
	char field_828;
	char field_829;
	char field_82A;
	char field_82B;
	char field_82C;
	char field_82D;
	char field_82E;
	char field_82F;
	char field_830;
	char field_831;
	char field_832;
	char field_833;
	char field_834;
	char field_835;
	char field_836;
	char field_837;
	char field_838;
	char field_839;
	char field_83A;
	char field_83B;
	char field_83C;
	char field_83D;
	char field_83E;
	char field_83F;
	char field_840;
	char field_841;
	char field_842;
	char field_843;
	char field_844;
	char field_845;
	char field_846;
	char field_847;
	char field_848;
	char field_849;
	char field_84A;
	char field_84B;
	char field_84C;
	char field_84D;
	char field_84E;
	char field_84F;
	char field_850;
	char field_851;
	char field_852;
	char field_853;
	char field_854;
	char field_855;
	char field_856;
	char field_857;
	char field_858;
	char field_859;
	char field_85A;
	char field_85B;
	char field_85C;
	char field_85D;
	char field_85E;
	char field_85F;
	char field_860;
	char field_861;
	char field_862;
	char field_863;
	char field_864;
	char field_865;
	char field_866;
	char field_867;
	char field_868;
	char field_869;
	char field_86A;
	_BYTE gap86B[422];
	char field_A11;
	_BYTE gapA12[132];
	char field_A96;
	_BYTE gapA97[75];
	char field_AE2;
	char field_AE3;
	char field_AE4;
	char field_AE5;
	char field_AE6;
	char field_AE7;
	char field_AE8;
	char field_AE9;
	char field_AEA;
	char field_AEB;
	char field_AEC;
	char field_AED;
	char field_AEE;
	char field_AEF;
	char field_AF0;
	char field_AF1;
	char field_AF2;
	char field_AF3;
	char field_AF4;
	char field_AF5;
	char field_AF6;
	char field_AF7;
	char field_AF8;
	char field_AF9;
	char field_AFA;
	char field_AFB;
	char field_AFC;
	char field_AFD;
	char field_AFE;
	char field_AFF;
	char field_B00;
	char field_B01;
	char field_B02;
	char field_B03;
	char field_B04;
	char field_B05;
	char field_B06;
	char field_B07;
	char field_B08;
	char field_B09;
	MissionGoalFG FGGoal[8];
	char field_D8A;
	char field_D8B;
	char field_D8C;
	char field_D8D;
	char field_D8E;
	char field_D8F;
	char field_D90;
	char field_D91;
	char field_D92;
	char field_D93;
	char field_D94;
	char field_D95;
	char field_D96;
	char field_D97;
	char field_D98;
	char field_D99;
	char field_D9A;
	char field_D9B;
	char field_D9C;
	char field_D9D;
	char field_D9E;
	char field_D9F;
	char field_DA0;
	char field_DA1;
	char field_DA2;
	char field_DA3;
	char field_DA4;
	char field_DA5;
	char field_DA6;
	char field_DA7;
	char field_DA8;
	char field_DA9;
	char field_DAA;
	char field_DAB;
	char field_DAC;
	char field_DAD;
	char field_DAE;
	char field_DAF;
	char field_DB0;
	char field_DB1;
	char field_DB2;
	char field_DB3;
	char field_DB4;
	char field_DB5;
	char field_DB6;
	char field_DB7;
	char field_DB8;
	char field_DB9;
	char field_DBA;
	char field_DBB;
	char field_DBC;
	char field_DBD;
	char field_DBE;
	char field_DBF;
	char field_DC0;
	char field_DC1;
	char field_DC2;
	char field_DC3;
	char field_DC4;
	char field_DC5;
	char field_DC6;
	char field_DC7;
	char field_DC8;
	char status2;
	char field_DCA;
	char field_DCB;
	char field_DCC;
	char field_DCD;
	char field_DCE;
	char field_DCF;
	char field_DD0;
	char field_DD1;
	char field_DD2;
	char field_DD3;
	char field_DD4;
	char field_DD5;
	char field_DD6;
	char field_DD7;
	char field_DD8;
	char field_DD9;
	char field_DDA;
	char field_DDB;
	char field_DDC;
	char field_DDD;
	char field_DDE;
	char field_DDF;
	char field_DE0;
	char field_DE1;
	char field_DE2;
	char field_DE3;
	char field_DE4;
	char field_DE5;
	char field_DE6;
	char field_DE7;
	char field_DE8;
	char field_DE9;
	__int16 field_DEA;
	char field_DEC;
	char field_DED;
	char field_DEE;
	char field_DEF;
	char field_DF0;
	char field_DF1;
	char field_DF2;
	char field_DF3;
	char field_DF4;
	char field_DF5;
	char field_DF6;
	char field_DF7;
	char field_DF8;
	char field_DF9;
	char field_DFA;
	char field_DFB;
	char field_DFC;
	char field_DFD;
	char field_DFE;
	char field_DFF;
	char field_E00;
	char field_E01;
	char field_E02;
	char field_E03;
	char field_E04;
	char field_E05;
	char field_E06;
	char field_E07;
	char field_E08;
	char field_E09;
	char field_E0A;
	char field_E0B;
	char field_E0C;
	char field_E0D;
	char field_E0E;
	char field_E0F;
	char field_E10;
	char field_E11;
	char field_E12;
	char field_E13;
	char field_E14;
	char field_E15;
	char field_E16;
	char field_E17;
	char field_E18;
	char field_E19;
	char field_E1A;
	char field_E1B;
	char field_E1C;
	char field_E1D;
	char field_E1E;
	char field_E1F;
	char field_E20;
	char field_E21;
	char field_E22;
	char field_E23;
	char field_E24;
	char field_E25;
	char field_E26;
	char field_E27;
	char field_E28;
	char field_E29;
	char field_E2A;
	char field_E2B;
	char field_E2C;
	char field_E2D;
	char field_E2E;
	char field_E2F;
	char field_E30;
	char field_E31;
	char field_E32;
	char field_E33;
	char field_E34;
	char field_E35;
	char field_E36;
	char field_E37;
	char field_E38;
	char field_E39;
	char field_E3A;
	char field_E3B;
	char field_E3C;
	char field_E3D;
	char field_E3E;
	char field_E3F;
	char field_E40;
	char field_E41;
};

static_assert(sizeof(FlightGroupEntry) == 3650, "size of FlightGroup must be 3650");

struct CraftDefHardpoints
{
	__int16 positionX;
	__int16 positionZ;
	__int16 positionY;
	char hardpointID;
	char meshID;
};

struct Vector3Int
{
	int positionX;
	int positionY;
	int positionZ;
};



struct CraftDefinition
{
	int craftShortNamePTR;
	int craftNamePTR;
	__int16 score;
	__int16 promoPointWorth;
	char hasHyperdrive;
	char laserConvergenceType;
	char hasShields;
	int shieldHitpoints;
	char painThreshold;
	char field_14;
	int hullHitpoints;
	int criticalDmgThreshold;
	__int16 systemHitpoints;
	char engineThrottle;
	__int16 topSpeedMPH;
	__int16 acceleration;
	__int16 deceleration;
	__int16 yawRate;
	__int16 rollingYawPercentage;
	__int16 rollRate;
	__int16 pitchRate;
	__int16 deathRotationSpeed;
	__int16 driftSpeed;
	char cockpitFileName[256];
	__int16 laserType[3];
	char laserStartingHardpoint[3];
	char laserEndingHardpoint[3];
	char laserNumAccumulators[3];
	char weaponGroupType[3];
	int laserRange[3];
	__int16 laserFireRatio[3];
	__int16 warheadType[2];
	char warheadStartingHardpoint[2];
	char warheadEndingHardpoint[2];
	char warheadAccumulators[2];
	char warheadCapacity[2];
	CraftDefHardpoints hardpoints[16];
	void *engines[16];
	char engineMeshIDs[16];
	char enginesCount;
	char countermeasuresCount;
	int field_234;
	__int16 cockpitPosY;
	__int16 cockpitPosZ;
	__int16 cockpitPosX;
	__int16 turretPositionY[2];
	__int16 turretPositionZ[2];
	__int16 turretPositionX[2];
	__int16 turretOrientationX[2];
	__int16 turretOrientationY[2];
	__int16 turretOPTModelID[2];
	__int16 turretArcX[2];
	__int16 turretArcY[2];
	int dockPositionY;
	int dockFromSmallPositionZ;
	int dockFromBigPositionZ;
	int dockToSmallPositionZ;
	int dockToBigPositionZ;
	int insideHangarX;
	int insideHangarZ;
	int insideHangarY;
	int outsideHangarX;
	int outsideHangarZ;
	int outsideHangarY;
	__int16 sizeScale;
	__int16 sizeX;
	__int16 sizeZ;
	__int16 sizeY;
	__int16 numOfDockingPoints;
	Vector3Int dockingPoints[9];
	int accStartPositionX;
	int accStartPositionZ;
	int accStartPositionY;
	int accEndPositionX;
	int accEndPositionZ;
	int accEndPositionY;
	char numOfFloatHardpoints;
	char numOfAccEndPoints;
	Vector3Int AccEndPoints[8];
	char numOfJammingPoints;
	Vector3Int JammingPoints[8];
};

static_assert(sizeof(CraftDefinition) == 987, "size of CraftDefinition must be 987");

struct MissionGlobalCargo
{
	char Cargo[64];
	BYTE unknown_0x40[4];
	BYTE Unknown1;
	BYTE unknown_0x45[3];
	BYTE Unknown2;
	BYTE Unknown3;
	BYTE Unknown4;
	BYTE Unknown5;
	BYTE unknown_0x4C[64];
};

static_assert(sizeof(MissionGlobalCargo) == 140, "size of MissionGlobalCargo must be 140");

struct MissionMessage
{
	char Message[64];
	BYTE unknown_0x42[16];
	BYTE SetToTeam[10];
	MissionTrigger Trigger1;
	MissionTrigger Trigger2;
	BYTE Unknown1;
	BYTE unknown_0x69;
	BYTE Trigger1OrTrigger2;
	BYTE unknown_0x6B;
	MissionTrigger Trigger3;
	MissionTrigger Trigger4;
	BYTE unknown_0x78[2];
	BYTE Trigger3OrTrigger4;
	BYTE unknown_0x7B;
	char Voice[8];
	BYTE OriginatingFG;
	BYTE unknown_0x85[7];
	BYTE DelaySeconds;
	BYTE Triggers12OrTriggers34;
	BYTE Color;
	BYTE Unknown2;
	MissionTrigger Cancel1;
	MissionTrigger Cancel2;
	BYTE unknown_0x9C[2];
	BYTE Cancel1OrCancel2;
	BYTE unknown_0x9F;
	BYTE Unknown3;
	BYTE unknown_0xA1[13];
};

static_assert(sizeof(MissionMessage) == 160, "size of MissionMessage must be 160");

struct MissionGlobalGoal
{
	MissionTrigger Trigger1;
	MissionTrigger Trigger2;
	BYTE unknown_0xC[2];
	BYTE Trigger1OrTrigger2;
	BYTE Unknown1;
	MissionTrigger Trigger3;
	MissionTrigger Trigger4;
	BYTE unknown_0x1C[2];
	BYTE Trigger3OrTrigger4;
	BYTE unknown_0x1F[8];
	BYTE Unknown2;
	BYTE unknown_0x28[9];
	BYTE Triggers12OrTriggers34;
	BYTE Unknown3;
	signed char Points;
	BYTE Unknown4;
	BYTE Unknown5;
	BYTE Unknown6;
	BYTE unknown_0x37;
	BYTE ActiveSquence;
	BYTE unknown_0x39[73];
};

static_assert(sizeof(MissionGlobalGoal) == 122, "size of MissionGlobalGoal must be 122");

struct MissionTeam
{
	char Name[18];
	BYTE unknown_0x14[6];
	BYTE Allegiances[10];
	char EndOfMissionMessages[64];
	BYTE unknown_0x64[320];
	BYTE Unknowns[6];
	char EomVoiceIDs[20];
	BYTE unknown_0x1BE[41];
};

static_assert(sizeof(MissionTeam) == 485, "size of MissionTeam must be 485");

struct QuickMissionHeader
{
	BYTE unknown_0x0[2];
	BYTE Unknown1;
	BYTE unknown_0x3[2];
	BYTE Unknown2;
	BYTE unknown_0x6[8];
	char IffNames[4][20];
	char RegionNames[4][132];
	MissionGlobalCargo GlobalCargo[16];
	char GlobalGroupNames[16][87];
	BYTE unknown_0x109E[4872];
	BYTE MissionType;
	BYTE unknown_0x23A7;
	BYTE TimeLimitMinutes;
	BYTE EndMissionWhenComplete;
	BYTE BriefingOfficer;
	BYTE BriefingLogo;
	BYTE unknown_0x23AC;
	BYTE Unknown3;
	BYTE Unknown4;
	BYTE Unknown5;
	BYTE unknown_0x23B0[58];
};

static_assert(sizeof(QuickMissionHeader) == 9194, "size of QuickMissionHeader must be 9194");

struct MissionFlightGroup
{
	char Name[20];
	BYTE EnableDesignation;
	BYTE EnableDesignation2;
	BYTE Designation1;
	BYTE Designation2;
	BYTE Unknown1;
	BYTE GlobalCargoIndex;
	BYTE GlobalSpecialCargoIndex;
	BYTE unknown_0x1B[13];
	char Cargo[20];
	char SpecialCargo[20];
	char CraftRole[20];
	BYTE unknown_0x64[5];
	BYTE SpecialCargoCraft;
	BYTE RandomSpecialCargoCraft;
	BYTE CraftType;
	BYTE NumberOfCraft;
	BYTE Status1;
	BYTE Warhead;
	BYTE Beam;
	BYTE Iff;
	BYTE Team;
	BYTE GroupAI;
	BYTE Markings;
	BYTE Radio;
	BYTE unknown_0x75;
	BYTE Formation;
	BYTE FormationSpacing;
	BYTE GlobalGroup;
	BYTE LeaderSpacing;
	BYTE NumberOfWaves;
	BYTE Unknown3;
	BYTE unknown_0x7C;
	BYTE PlayerNumber;
	BYTE ArriveOnlyIfHuman;
	BYTE PlayerCraft;
	BYTE Yaw;
	BYTE Pitch;
	BYTE Roll;
	BYTE unknown_0x83;
	BYTE Unknown4;
	BYTE unknown_0x85;
	BYTE Unknown5;
	BYTE ArrivalDifficulty;
	MissionTrigger Arrival1;
	MissionTrigger Arrival2;
	BYTE unknown_0x94[2];
	BYTE Arrival1OrArrival2;
	BYTE Unknown6;
	MissionTrigger Arrival3;
	MissionTrigger Arrival4;
	BYTE unknown_0xA4[2];
	BYTE Arrival3OrArrival4;
	BYTE unknown_0xA7;
	BYTE Arrivals12OrArrivals34;
	BYTE unknown_0xA9;
	BYTE ArrivalDelayMinutes;
	BYTE ArrivalDelaySeconds;
	MissionTrigger Departure1;
	MissionTrigger Departure2;
	BYTE unknown_0xB8[2];
	BYTE Departure1OrDeparture2;
	BYTE unknown_0xBB;
	BYTE DepartureDelayMinutes;
	BYTE DepartureDelaySeconds;
	BYTE AbortTrigger;
	BYTE Unknown7;
	BYTE Unknown8;
	BYTE unknown_0xC1;
	BYTE ArrivalMothership;
	BYTE ArriveViaMothership;
	BYTE DepartureMothership;
	BYTE DepartViaMothership;
	BYTE AlternateArrivalMothership;
	BYTE AlternateArriveViaMothership;
	BYTE AlternateDepartureMothership;
	BYTE AlternateDepartViaMothership;
	MissionOrder order[16];
	BYTE unknown_0xA1A[240];
	MissionGoalFG fgGoal[8];
	__int16 StartPoints[3][4];
	__int16 HyperPoint[4];
	BYTE StartPointRegions[3];
	BYTE HyperPointRegion;
	BYTE Unknown16;
	BYTE Unknown17;
	BYTE Unknown18;
	BYTE Unknown19;
	BYTE Unknown20;
	BYTE Unknown21;
	BYTE Unknown22;
	BYTE unknown_0xDB5;
	BYTE Unknown23;
	BYTE Unknown24;
	BYTE Unknown25;
	BYTE Unknown26;
	BYTE Unknown27;
	BYTE Unknown28;
	BYTE Unknown29;
	BYTE unknown_0xDBD[3];
	BYTE Unknown30;
	BYTE Unknown31;
	BYTE unknown_0xDC2[2];
	BYTE EnableGlobalUnit;
	BYTE Unknown32;
	BYTE Unknown33;
	BYTE Countermeasures;
	BYTE CraftExplosionTime;
	BYTE Status2;
	BYTE GlobalUnit;
	BYTE unknown_0xDCB;
	BYTE OptionalWarheads[8];
	BYTE OptionalBeams[4];
	BYTE unknown_0xDD8[2];
	BYTE OptionalCountermeasures[3];
	BYTE unknown_0xDDD;
	BYTE OptionalCraftCategory;
	BYTE OptionalCraft[10];
	BYTE NumberOfOptionalCraft[10];
	BYTE NumberofOptionalCraftWaves[10];
	char PilotID[16];
	BYTE unknown_0xE0D[5];
	BYTE Backdrop;
	BYTE unknown_0xE13[22];
	BYTE Unknown34;
	BYTE unknown_0xE2A;
	BYTE Unknown35;
	BYTE unknown_0xE2C;
	BYTE Unknown36;
	BYTE unknown_0xE2E;
	BYTE Unknown37;
	BYTE unknown_0xE30;
	BYTE Unknown38;
	BYTE unknown_0xE32;
	BYTE Unknown39;
	BYTE unknown_0xE34;
	BYTE Unknown40;
	BYTE unknown_0xE36;
	BYTE Unknown41;
	BYTE unknown_0xE38[6];
	BYTE unknown_0x[28];
};

static_assert(sizeof(MissionFlightGroup) == 3646, "size of MissionFlightGroup must be 3646");

struct QuickMissionData
{
	MissionFlightGroup fg[192];
	MissionMessage message[64];
	MissionGlobalGoal globalGoals[70];
	QuickMissionHeader header;
	MissionTeam teams[10];
	__int16 numFGs;
	__int16 numMessages;
	BYTE empty[2];
	__int16 platformID;
	BYTE empty1[557568];
};

static_assert(sizeof(QuickMissionData) == 1290432, "size of QuickMissionData must be 1290432");

struct T0x0AE2A60_1137E_0108
{
	int field_0[512];
};

struct T0x0AE2A60_1137E_4908
{
	int field_0[25];
};

struct T0x0AE2A60_1137E_4C8C
{
	int field_0[6];
};

struct S0x0AE2A60_05E8E
{
	int bonusScore;
	char field_4[20];
	int field_18;
	char field_1C[8];
	int field_24;
	char field_28[8];
	int field_30[1024];
	char field_1030[2048];
	int field_1830[1024];
	char field_2830[2048];
	int field_3030[1024];
	char field_4030[2048];
	int field_4830[50];
	char field_48F8[100];
	int field_495C[50];
	char field_4A24[100];
	int field_4A88[50];
	char field_4B50[100];
	int field_4BB4[12];
	char field_4BE4[24];
	int field_4BFC[12];
	char field_4C2C[24];
	int field_4C44[12];
	char field_4C74[24];
	int field_4C8C;
	char field_4C90[8];
	int field_4C98;
	char field_4C9C[8];
	int field_4CA4;
	char field_4CA8[8];
	int field_4CB0;
	char field_4CB4[8];
	int field_4CBC;
	char field_4CC0[8];
	int field_4CC8;
	char field_4CCC[8];
	int field_4CD4;
	char field_4CD8[8];
	int field_4CE0;
	char field_4CE4[8];
	int field_4CEC;
	char field_4CF0[8];
	int field_4CF8[50];
	char field_4DC0[100];
	int field_4E24[12];
	char field_4E54[24];
};

struct S0x0AE2A60_0ACFE
{
	int numOfTimesFlown;
	int field_4;
	int field_8;
	int field_C;
	int isCompleted;
	int field_14;
	int bestScore;
	int bestTime;
	int field_20;
	int awardID;
	int bestBonus;
	char field_2C[4];
};

struct PilotData_ClientPlayer
{
	char formalName[14];
	char friendlyName[14];
	int flightGroupID;
	int field_20;
	int directPlayID;
	int field_28;
	int field_2C;
	int field_30;
	int field_34;
	int field_38;
	int field_3C;
	int field_40;
	int field_44;
	int SpeciesID;
	int WarheadType;
	int BeamType;
	int CounterMeasureType;
	int craftsCount;
	int wavesCount;
	int field_60;
};

struct S0x0AE2A60_11262
{
	int missionScore;
	int field_4;
	char isMissionComplete[4];
	int field_C;
	int field_10;
	int field_14;
	int field_18;
};

struct PilotFactionStatsEntry
{
	int field_0;
	int Team;
	int MissionDirectory;
	int MissionDescriptionIDs[7];
	char field_28[32];
	int field_48;
	int field_4C;
	char field_50[16];
	int field_60;
	char field_64[24];
	int field_7C;
	char field_80[16];
	int field_90;
	char field_94[24];
	int field_AC[4];
	char field_BC[12];
	int totalScore;
	char field_CC[4];
	int bonusScore;
	int field_D4;
	int field_D8[3];
	int field_E4[3];
	int totalKills[3];
	int field_FC[3];
	T0x0AE2A60_1137E_0108 field_108[3];
	T0x0AE2A60_1137E_0108 field_1908[3];
	T0x0AE2A60_1137E_0108 field_3108[3];
	T0x0AE2A60_1137E_4908 field_4908[3];
	T0x0AE2A60_1137E_4908 field_4A34[3];
	T0x0AE2A60_1137E_4908 field_4B60[3];
	T0x0AE2A60_1137E_4C8C field_4C8C[3];
	T0x0AE2A60_1137E_4C8C field_4CD4[3];
	T0x0AE2A60_1137E_4C8C field_4D1C[3];
	int field_4D64[3];
	int field_4D70[3];
	int field_4D7C[3];
	int field_4D88[3];
	int field_4D94[3];
	int totalCraftLosses[3];
	int fromCollisions[3];
	int toStarships[3];
	int toMines[3];
	T0x0AE2A60_1137E_4908 field_4DD0[3];
	T0x0AE2A60_1137E_4C8C field_4EFC[3];
};


struct PilotData
{
	char name[14];
	int field_E;
	char field_12[8];
	int field_1A;
	int numHumanPlayersLastMission;
	int field_22;
	int Team;
	int missionDirectoryID;
	int missionIDs[7];
	char multiplayerGameName[32];
	char multiplayerGameName2[32];
	int field_8A;
	int field_8E;
	int field_92;
	int newPromotion;
	int nextPromotionPercent;
	int field_9E[3];
	int field_AA[3];
	int field_B6[3];
	int field_C2[3];
	T0x0AE2A60_1137E_0108 field_CE[3];
	T0x0AE2A60_1137E_0108 field_18CE[3];
	T0x0AE2A60_1137E_0108 field_30CE[3];
	T0x0AE2A60_1137E_4908 field_48CE[3];
	T0x0AE2A60_1137E_4908 field_49FA[3];
	T0x0AE2A60_1137E_4908 field_4B26[3];
	T0x0AE2A60_1137E_4C8C field_4C52[3];
	T0x0AE2A60_1137E_4C8C field_4C9A[3];
	T0x0AE2A60_1137E_4C8C field_4CE2[3];
	int field_4D2A[3];
	int field_4D36[3];
	int field_4D42[3];
	int field_4D4E[3];
	int field_4D5A[3];
	int field_4D66[3];
	int field_4D72[3];
	int field_4D7E[3];
	int field_4D8A[3];
	T0x0AE2A60_1137E_4908 field_4D96[3];
	T0x0AE2A60_1137E_4C8C field_4EC2[3];
	int missionScore;
	int field_4F0E[8];
	int field_4F2E[8];
	int field_4F4E[192];
	int field_524E[192];
	int field_554E[8];
	int field_556E[8];
	int field_558E[192];
	int field_588E[192];
	int field_5B8E[192];
	S0x0AE2A60_05E8E field_5E8E;
	char field_ACFA[4];
	S0x0AE2A60_0ACFE MissionStatistics[53];
	char field_B6EE[9696];
	S0x0AE2A60_0ACFE MissionStatistics2[53];
	char field_E6BE[624];
	int field_E92E;
	char field_E932[9064];
	char speciesKnown[232];
	char field_10D82[280];
	int newCraftAddedToTechRoom;
	int pilotRating;
	int rank;
	int kalidorCresent;
	int field_10EAA;
	int field_10EAE[25];
	char ratingName[32];
	int field_10F32;
	int field_10F36;
	int field_10F3A;
	int field_10F3E;
	PilotData_ClientPlayer field_10F42[8];
	S0x0AE2A60_11262 field_11262[10];
	int field_1137A;
	PilotFactionStatsEntry FactionStats[4];
	char emailsStatus[100];
	char emailsSortCriterion;
	int campaignMode;
	int skipMissionsRemaining;
	int regionsCount;
	char MissionFileName[256];
	char field_251FF;
	char field_25200[7];
	int field_25207;
	char hangarType;
};

static_assert(sizeof(PilotData) == 152076, "size of PilotData must be 152076");


struct MissionLSTEntry
{
	char missionFileName[64];
	char missionTitle[128];
	char MissionTitle[128];
	__int32 IDNumber;
	__int32 IsUnselectable;
};

struct HudMessage
{
	InFlightStrings StringsMessageLineIndex;
	__int16 S0x09B6320_m02;
	__int16 S0x09B6320_m04;
	char TimeSeconds;
	char TimeMinutes;
	char TimeHours;
	char S0x09B6320_m09;
	__int16 IFFCode;
	char S0x09B6320_m0C;
	char S0x09B6320_m0D;
	char Text[70];
};


#pragma pack(pop)
